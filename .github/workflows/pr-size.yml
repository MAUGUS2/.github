name: üìè PR size check
on: 
  pull_request:
    types: [opened, synchronize]

jobs:
  check-size:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: üìä Check PR size
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const additions = pr.additions;
            const deletions = pr.deletions;
            const total = additions + deletions;
            
            let comment = '';
            let labels = [];
            
            // Size categories
            if (total < 10) {
              labels.push('size/XS');
              comment = '‚úÖ **PR Size: XS** (<10 lines) - Perfect for quick review!';
            } else if (total < 100) {
              labels.push('size/S');
              comment = '‚úÖ **PR Size: S** (<100 lines) - Good size for thorough review.';
            } else if (total < 500) {
              labels.push('size/M');
              comment = '‚ö†Ô∏è **PR Size: M** (<500 lines) - Consider breaking into smaller PRs if possible.';
            } else if (total < 800) {
              labels.push('size/L');
              comment = '‚ö†Ô∏è **PR Size: L** (<800 lines) - Large PR, ensure thorough testing.';
            } else {
              labels.push('size/XL');
              comment = `‚ùå **PR Size: XL** (${total} lines) - This PR exceeds our 800 line limit!
              
              **Why smaller PRs?**
              - Easier to review thoroughly
              - Less chance of bugs
              - Faster to merge
              - Less merge conflicts
              
              **Consider:**
              - Breaking into multiple PRs
              - Creating feature flags for incremental releases
              - If this is unavoidable, please justify in the PR description`;
              
              // Only fail if it's not a special case
              if (!pr.title.includes('[LARGE]') && !pr.body.includes('large-pr-justified')) {
                core.setFailed(`PR too large: ${total} lines changed (limit: 800)`);
              }
            }
            
            // Add size labels
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: labels
            });
            
            // Comment with size info
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('PR Size:')
            );
            
            const body = `${comment}
            
            **Details:**
            - ‚ûï Additions: ${additions}
            - ‚ûñ Deletions: ${deletions}
            - üìä Total: ${total}`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: body
              });
            }